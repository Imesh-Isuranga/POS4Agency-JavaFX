-- Drop the database if it exists to ensure no leftover data
DROP DATABASE IF EXISTS BiscuitAgency;

-- Create the database
CREATE DATABASE BiscuitAgency;
USE BiscuitAgency;

-- Create the Shop table
CREATE TABLE Shop(
 sh_id INT AUTO_INCREMENT,
 id VARCHAR(100) NOT NULL,
 name VARCHAR(30),
 address VARCHAR(30),
 credit_uptoNow DECIMAL(8,2),
 UNIQUE (id),
 CONSTRAINT PRIMARY KEY (sh_id)
);

-- Reset the AUTO_INCREMENT value
ALTER TABLE Shop AUTO_INCREMENT = 1;

-- Create the other tables
CREATE TABLE OrderBook (
    ob_id INT AUTO_INCREMENT PRIMARY KEY,
    id VARCHAR(100) NOT NULL,
    booknum VARCHAR(6) NOT NULL,
    invnum VARCHAR(6) NOT NULL,
    shopId VARCHAR(100) NOT NULL,
    UNIQUE (id),
    CONSTRAINT FOREIGN KEY (shopId) REFERENCES Shop(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Orders (
    auto_id INT AUTO_INCREMENT PRIMARY KEY,
    orderId VARCHAR(100) NOT NULL,
    date DATE,
    shopId VARCHAR(100) NOT NULL,
    CONSTRAINT FOREIGN KEY (shopId) REFERENCES Shop(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (orderId) REFERENCES OrderBook(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Payment (
    id INT NOT NULL AUTO_INCREMENT,
    orderId VARCHAR(100) NOT NULL,
    paymentDetails VARCHAR(50) DEFAULT '',
    paymentWay VARCHAR(10),
    amount DECIMAL(8,2),
    CONSTRAINT PRIMARY KEY (id),
    CONSTRAINT FOREIGN KEY (orderId) REFERENCES OrderBook(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MainItem(
    code VARCHAR(6) NOT NULL,
    name VARCHAR(50),
    unitPrice_Box_Agency DECIMAL(8,2),
    unitPrice_Box DECIMAL(8,2),
    itemCountInBox INT(5) NOT NULL,
    boxQty INT(5) DEFAULT '0',
    itemQty INT(5) DEFAULT '0',
    CONSTRAINT PRIMARY KEY (code)
);


CREATE TABLE Item(
    code VARCHAR(6) NOT NULL,
    name VARCHAR(50),
    unitPrice_Box_Agency DECIMAL(8,2),
    unitPrice_Box DECIMAL(8,2),
    itemCountInBox INT(5) NOT NULL,
    boxQty INT(5) DEFAULT '0',
    itemQty INT(5) DEFAULT '0',
    CONSTRAINT PRIMARY KEY (code),
    CONSTRAINT FOREIGN KEY (code) REFERENCES MainItem(code) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Discount (
    id INT NOT NULL AUTO_INCREMENT,
    idDup INT(5) NOT NULL,
    orderId VARCHAR(100) NOT NULL,
    itemCode VARCHAR(6) NOT NULL,
    discount_percent DECIMAL(8,2),
    PRIMARY KEY (id),
    CONSTRAINT FOREIGN KEY (itemCode) REFERENCES Item(code) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE ReturnStock (
    id INT NOT NULL AUTO_INCREMENT,
    orderId VARCHAR(100) NOT NULL,
    itemCode VARCHAR(100) NOT NULL,
    boxQty INT(5) DEFAULT '0',
    itemQty INT(5) DEFAULT '0',
    perQTY_price DECIMAL(8,2),
    PRIMARY KEY (id),
    CONSTRAINT FOREIGN KEY (itemCode) REFERENCES Item(code) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (orderId) REFERENCES OrderBook(id) ON DELETE CASCADE ON UPDATE CASCADE
);



CREATE TABLE OrderDetail(
    orderId VARCHAR(100) NOT NULL,
    itemCode VARCHAR(6) NOT NULL,
    unitPrice_Box DECIMAL(8,2),
    total DECIMAL(8,2),
    free_total DECIMAL(8,2),
    dis_total DECIMAL(8,2),
    return_total DECIMAL(8,2),
    boxQty INT(5) DEFAULT '0',
    itemQty INT(5) DEFAULT '0',
    boxQtyFree INT(5) DEFAULT '0',
    itemQtyFree INT(5) DEFAULT '0',
    CONSTRAINT PRIMARY KEY (orderId, itemCode),
    CONSTRAINT FOREIGN KEY (orderId) REFERENCES OrderBook(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (itemCode) REFERENCES Item(code) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ShopsCredit (
    id INT NOT NULL AUTO_INCREMENT,
    shopId VARCHAR(100) NOT NULL,
    date_paid DATE NOT NULL, -- Changed to DATE
    amount DECIMAL(8,2),
    paymentDetails VARCHAR(50) DEFAULT '',
    PRIMARY KEY (id),
    CONSTRAINT FOREIGN KEY (shopId) REFERENCES Shop(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE SaveList (
    id INT NOT NULL AUTO_INCREMENT,
    description VARCHAR(1000) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE MonthlyReport (
    id INT NOT NULL AUTO_INCREMENT,
    date DATE,
    total DECIMAL(8,2),
    mr DECIMAL(8,2),
    discount DECIMAL(8,2),
    PRIMARY KEY (id)
);

CREATE TABLE OrderHistory (
    id INT NOT NULL AUTO_INCREMENT,
    invoice_num VARCHAR(100) NOT NULL,
    name_of_dealer VARCHAR(100) NOT NULL,
    total DECIMAL(8,2),
    cash DECIMAL(8,2),
    credit DECIMAL(8,2),
    cheque VARCHAR(100) NOT NULL,
    cheque_no VARCHAR(100) NOT NULL,
    mr DECIMAL(8,2),
    discount VARCHAR(100) NOT NULL,
    PRIMARY KEY (id)
);

